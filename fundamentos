

capitulo14

///operador ternario:


//es un operador condicional 

let edad = 25;
if (edad>18) console.log("es mayor de edad");
else{console.log("es menor de edad")};


// operador ternario seria asi:

(edad > 18) ? console.log("es mayor de edad") : console.log("es menor de edad")


///operador spread:

//este operador ayuda a destructurar un array

let valor1 = "valor 1";
let valor2 = "valor 2";
let valor3 = "valor 3";

let arr = ["valor 1", "valor 2","valor 3"];
console.log(valor1,valor2,valor3)
console.log(...arr)

// fusionar array

let arr = ["manzana", "pera", "banana"];
let arr2 = ["Kiwi", "naranja"];

console.log(arr)

let arr3 = [...arr, ...arr2]

console.log(arr3)

// parametro rest y argumento rest

const sumar = ( num1, num2,num3,num4) =>{
    console.log(num1 + num2 + num3 + num4)
}


let arr = [3,6,4,1]

sumar(...arr)


capitulo 15 

APIs (interface programacion de aplicacion) dentro del lenguaje

///objeto date



///localstorage y sessionstorage

son APIs que nos permite guardar informacion

dierencias

local se almacena en todo mientras session solo en pestaña , es decir que si se cierra se borra


setItem: asigna variable y su valor = key y valor

getItem: obtiene el valor de dicha variable o key

removeItem: elimina valor de dicha variable o key

clear: limpia todooooo

drag & drop

eventos del objeto
-dragenter
-drag
-dragend

eventos de zona
-dragenter
-dragover
-drop
-dragleave

propiedad dataTransfer
-getData()
-setData()





///indexDB

-caracteristicas:
*almacena informacion en el navegador de forma similar a localStorage
*es orientada a objetos
*es asincrona
*trabaja con eventos del DOM

-procedimiento de creacion
*objeto IndexeDDB
*Metodo open()
*onupgradeneeded, onsucess, onerror


-crear almacen de objetos y almacenar objetos
*almacen de objetos -conceptos
*metodo createObjectStore()
*autoIncrement vs keyPath()


-almacenar objetos
*metodo transaction()
*IDBTransaction.objectStore()
*IDBObjectStore.add()

-modificar objetos
*IDDBobjectStore.put()

-eliminar objetos
*IDBobjetctStore.delete()


"use strict"
const IDBRequest = indexedDB.open("ccpcDB",1); // window.indexedDB

IDBRequest.addEventListener("upgradeneeded", ()=>{
    const db = IDBRequest.result;
    db.createObjectStore("nombres",{
        autoIncrement: true
    })
})

IDBRequest.addEventListener("success", ()=>{
    console.log("todo salio correcto")
})

IDBRequest.addEventListener("error",()=>{
    console.log("ocurrio un error al abrir la base de datos")
})


const getIDBData = (mode,msg) => {
    const db = IDBRequest.result;
    const IDBtransaction = db.transaction("nombres",mode);
    const objectStore = IDBtransaction.objectStore("nombres");
    IDBtransaction.addEventListener("complete", ()=>{
        console.log(msg);
    });
    return objectStore;
}

const addObject = (objeto) =>{
    const IDBData = getIDBData("readwrite","objeto agregado correctamente");
    IDBData.add(objeto);
};

const readObject = () => {
    const IDBData = getIDBData("readonly");
    const cursor = IDBData.openCursor();
    cursor.addEventListener("success", ()=>{
        if (cursor.result){
            console.log(cursor.result.value);
            cursor.result.continue();

        }else{
            console.log("todos los datos fueron leidos")
        }
    })
}

const ugradeObject = (key,objeto) =>{
    const IDBData = getIDBData("readwrite","objeto modificado  correctamente");
    IDBData.put(key,objeto);
};

const deleteObject = (key) =>{
    const IDBData = getIDBData("readwrite","objeto eliminado  correctamente");
    IDBData.delete(key)
};

///cookies

exceptuadas:
-cookies de entrada de usuario
-cookies de identificacion o autenticacion de usuarios. (unicamente de sesion)
cookies de seguridad del usuario
-cookies de reporduccion multimedia
-cookies de sesion para equilibrar la carga
cookies de personalizacion de la interfaz de usuario
cookies de complemento (plug-in) para intercambiar contenidos sociales

no exceptuadas:
-el resto de cookies

cookies segun entidad que las gestione:

-cookies propias: son aqullas que se envian al equipo terminal del usuario desde un  equipo o dominio gestionado por el propio editor y desd el que se presta el servicio solicitado por el usuario
-cookies de tercero: son aquellas que se envian al equipo terminal del usuario desde un equipo o diminio que no es gestionado por el editor, sino por otra entidad que trata los datos obtenidos a traves de las cookies

cookies segun el tiempo que permanecen activadas

-cookies de sesion: son un tipo de cookies diseñadas para recabar y almacenar datos
-cookies persistentes: son un tipo de cookies en el que los datos siguen almacenados

cookies segun su finalidad:
-cookies de analisis: son aquellas que, bien tratadas por el titular del sitio, o por terceros, permiten cuantificar el numero de usuarios y asi realizar la medicion y analisis estadistico de la utilizacion, que hacen los usuarios del servicio ofertado.
para ellos, se analiza su navegador en la pagina web, con el fin de mejorar la oferta de productos o servicios que le ofrecemos.

-cookies publicirarias: son aquellas que permiten la gestion, de la forma mas eficaz posibles, de los espacios publicitarios que, en su casoo, el editor haya incluido en una pagina web, aplicacion o plataforma desde la que presta el servicio solicitado en base a criterios como el contenido editado o la frecuencia en la que se muestran los anuncios.

-cookies sociales son necesarias para las redes sociales externas(fabook, google, twitter, pinterest, instagram,etc...) su funcion es
controlar la interaccion con loswidgets sociales dentro de la pagina.

-cookies de publicidad comportamental: son aquelloas que permiten las gestion, de la forma mas eficaz posible, de los espacios publicitarios que en su caso, el editor haya incluido en una pagina web, aplicacion o plataforma desde la que presta el servicio solicitado. estas cookies almacenan informacion del comportamiento de usuarios obtenida atraves de la observacion contiuada de sus habitos de navegacion, lo que permite desarrollar un perfil especifico para mostrar publicidad en funcion del mismo.

tambein. es posible que al visitar alguna pagina web o al abrir algun email donde se publique algun anuncio o alguna promocion sobre determinados productos o sercicios se instale en el navegador alguna cookie que se utiliza para mostrar posterirmente publicidad relacionada con la busqueda que se haya realizado, para desarrollar un control de los anuncios en relacion, por ejemplo con el numero de veces que son vistos, donde aparecen, a que hora se ven, etc...


///object screen


AnchoTotal = screen.width //ancho total de la pantalla
AlturaTotal = screen.height//altura total de la pantalla

AnchoDisponible = screen.availWidth //ancho disponible de la pantalla
AlturaDisponible = screen.availHeight //altura disponible de la pantalla

Resolucion = screen.pixelDepth //resolucion de color de la pantalla
Profundidad = screen.colorDepth //profundidad de bits de la paleta de colores

///objeto canvas

api para generar graficos



const canvas = document.getElementById('canvas');
const ctx = canvas.getContex("2d");

ctx.lineWidth = "6";
ctx.strokeStyle ="#48c";
ctx.fillStyle = "#26a";
ctx.strokeRect(30,50,400,200);
ctx.fillRect(10,20,400,200);
ctx.lineTo(80,300);
ctx.lineTo(120,350);
ctx.lineTo(100,400);
ctx.lineTo(120,450);
ctx.stroke();
ctx.closePath();
ctx.beginPath();
ctx.lineTo(80,300);
ctx.lineTo(80,200);
ctx.stroke();
ctx.arc(120,120,100,10,40);
ctx.stroke();
